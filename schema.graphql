enum Period {
  EVIDENCE
  COMMIT
  VOTE
  APPEAL
  EXECUTED
}

type ArbitrableHistory @entity {
  id: Bytes!
  metaEvidence: String!
  disputes: [Dispute!]! @derivedFrom(field: "arbitrableHistory")
}

type Dispute @entity {
  id: ID!
  arbitrated: Bytes!
  metaEvidenceId: BigInt!
  arbitrableHistory: ArbitrableHistory
  ruling: BigInt!
  ruled: Boolean!
  period: Period!
  createdAtBlock: BigInt!
  lastPeriodChange: BigInt!
  nbChoices: BigInt!
  nbRounds: BigInt!
  rounds: [Round!]! @derivedFrom(field: "dispute")
  evidenceGroup: EvidenceGroup! @derivedFrom(field: "dispute")
}

type Round @entity {
  id: Bytes!
  dispute: Dispute!
  jurors: [Bytes!]!
}

type Draw @entity {
  "disputeID-appeal-voteID"
  id: ID!
  "Lucky juror who got drawn"
  address: Bytes!
  "Number of the round"
  appeal: BigInt!
  "Number of the dispute"
  disputeID: BigInt!
  "Number of the vote"
  voteID: BigInt!
}

type TokenAndETHShift @entity {
  "disputeId-address-(discriminator)"
  id: ID!
  ETHAmount: BigInt!
  address: Bytes!
  disputeID: BigInt!
  tokenAmount: BigInt!
}

type EvidenceGroup @entity {
  id: Bytes!
  dispute: Dispute
  length: BigInt!
  evidence: [Evidence!]! @derivedFrom(field: "group")
}

type Evidence @entity(immutable: true) {
  id: Bytes!
  group: EvidenceGroup!
  creationTime: BigInt!
  URI: String!
  sender: Bytes!
}
